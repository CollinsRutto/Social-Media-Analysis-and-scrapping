pip install bs4
pip install requests

from time import sleep
import requests
import pandas as pd
from bs4 import BeautifulSoup
from time import sleep
import requests
import pandas as pd
from bs4 import BeautifulSoup

def soup2list(src, list_, attr=None):
    if attr:
        for val in src:
            list_.append(val[attr])
    else:
        for val in src:
            list_.append(val.get_text(strip=True))

users = []
userReviewNum = []
ratings = []
locations = []
dates = []
reviews = []

from_page = 1
to_page = 7
company = 'goodreads.com'

for i in range(from_page, to_page + 1):
    result = requests.get(f"https://www.trustpilot.com/review/{company}?page={i}")
    soup = BeautifulSoup(result.content, 'html.parser')

    soup2list(soup.find_all('span', {'class': 'typography_heading-xxs__QKBS8 typography_appearance-default__AAY17'}), users)
    soup2list(soup.find_all('div', {'class': 'typography_body-m__xgxZ_ typography_appearance-subtle__8_H2l styles_detailsIcon__Fo_ua'}), locations)
    soup2list(soup.find_all('span', {'class': 'typography_body-m__xgxZ_ typography_appearance-subtle__8_H2l'}), userReviewNum)
    soup2list(soup.find_all('div', {'class': 'styles_reviewHeader__iU9Px'}), dates)
    soup2list(soup.find_all('div', {'class': 'styles_reviewHeader__iU9Px'}), ratings, attr='data-service-review-rating')
    soup2list(soup.find_all('div', {'class': 'styles_reviewContent__0Q2Tg'}), reviews)

    # To avoid throttling
    sleep(1)

# Debug: Print lengths of all lists to identify the issue
print("Length of users:", len(users))
print("Length of locations:", len(locations))
print("Length of userReviewNum:", len(userReviewNum))
print("Length of dates:", len(dates))
print("Length of ratings:", len(ratings))
print("Length of reviews:", len(reviews))

# Filter out userReviewNum to match the length of other lists
userReviewNum = userReviewNum[:len(users)]  # Use the length of 'users' list

# Create DataFrame only if all lists have the same length
if len(users) == len(locations) == len(userReviewNum) == len(dates) == len(ratings) == len(reviews):
    review_data = pd.DataFrame({
        'Username': users,
        'Total reviews': userReviewNum,
        'Location': locations,
        'Date': dates,
        'Content': reviews,
        'Rating': ratings
    })
    print("DataFrame created successfully.")
    print(review_data.head())  # Display the first few rows of the DataFrame
else:
    print("Error: Lengths of lists do not match, cannot create DataFrame.")
